#!/usr/bin/python
import resource
import sys
import os
import subprocess
import matplotlib.pyplot as plt
import time
from optparse import OptionParser

parser = OptionParser("usage: %prog [options] arg")
parser.add_option("-i", "--iterations", dest="max_range",
                  help="Run max_range times", default="10")
parser.add_option("-o", "--output", dest="spec_filename",
                  help="The file where to place the boxplot", default="default")

(options, args) = parser.parse_args()

if len(args) == 0:
  parser.print_help()
  exit()

cmd = args

class BoxPlot:
  def __init__(self):
    self.min = sys.float_info.max
    self.max = 0.0
    self.content = []

  def add(self, number):
    if number < self.min:
      self.min = number
    if number > self.max:
      self.max = number
    self.content.append(number)

  def output(self):
    if options.spec_filename == 'default':
      filename = ('_'.join(cmd).replace('/','_').replace('.','_')).replace(' ','_')+"_"+str(time.time())+'.png'
    else:
      filename = options.spec_filename
    print("Min: "+str(self.min))
    print("Max: "+str(self.max))
    print("Mean: "+str(sum(self.content) / len(self.content)))
    fig1, ax1 = plt.subplots()
    ax1.set_title(cmd)
    ax1.boxplot(self.content)
    fig1.savefig(filename)
    plt.show(fig1)
    plt.close(fig1)

elementary_env_vars = os.environ.copy()
elementary_env_vars["ELM_DISPLAY"] = "buffer"
elementary_env_vars["ELM_FIRST_FRAME"] = "E"

boxplot = BoxPlot()

old_time = resource.getrusage(resource.RUSAGE_CHILDREN).ru_utime

for x in range(1,int(options.max_range)):
  subprocess.run(cmd, env = elementary_env_vars)
  tmp = resource.getrusage(resource.RUSAGE_CHILDREN).ru_utime
  r = tmp - old_time
  old_time = tmp
  boxplot.add(r)
boxplot.output()

